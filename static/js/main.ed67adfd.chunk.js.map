{"version":3,"sources":["images/Chandler.png","images/Gunther.png","images/Jack Geller.png","images/Janice.png","images/Joey.png","images/Judy Geller.png","images/Monica.png","images/Paul.png","images/Phoebe.png","images/Rachel.png","images/Ross.png","images/Gary.png","components/Nav/Nav.js","components/Character/Character.js","components/Container/Container.js","components/Footer/Footer.js","components/Banner/Banner.js","images.js","components/MyGame.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","props","react_default","a","createElement","className","navMsgColor","navMessage","score","highScore","Character","onClick","e","clickEvent","target","src","name","alt","Container","shake","characters","map","i","components_Character_Character","key","Footer","Banner","images","Chandler","Gunther","Jack","Janice","Joey","Judy","Monica","Paul","Rachel","Phoebe","Ross","Gary","MyGame","state","allCharacters","_this","shuffleArray","wasClicked","checkClicked","bind","Object","assertThisInitialized","newArr","slice","shuffleArr","length","push","splice","Math","floor","random","clickedElem","_this2","this","prevState","shuffled","includes","setState","setTimeout","components_Nav_Nav","components_Banner_Banner","components_Container_Container","components_Footer_Footer","Component","ReactDOM","render","components_MyGame","document","getElementById"],"mappings":"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0SCczBC,SAXH,SAAAC,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMK,aAAcL,EAAMM,YAC1CL,EAAAC,EAAAC,cAAA,qBACUH,EAAMO,MADhB,IACuBN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,KADvB,eACmE,IAChEJ,EAAMQ,cCEEC,eANG,SAAAT,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOM,QAAS,SAAAC,GAAC,OAAIX,EAAMY,WAAWD,EAAEE,OAAOC,OAC5Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BU,IAAKd,EAAMe,KAAMC,IAAI,QCgBpDC,EAfG,SAAAjB,GAAK,OAErBC,EAAAC,EAAAC,cAAA,OACEC,UACEJ,EAAMkB,MACF,0DACA,qDAGLlB,EAAMmB,WAAWC,IAAI,SAAClB,EAAGmB,GAAJ,OACpBpB,EAAAC,EAAAC,cAACmB,EAAD,CAAWP,KAAMb,EAAGqB,IAAKF,EAAGT,WAAYZ,EAAMY,iBCbrCY,SAFA,kBAAMvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,sBCQNqB,SARA,kBACbxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uEACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAb,yRCuBWsB,EAfA,CACbC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KC4GaC,6MA7HbC,MAAQ,CACNjC,MAAO,EACPC,UAAW,EAGXH,YAAa,GAGbC,WAAY,2BAGZmC,cAAeC,EAAKC,eAGpBC,WAAY,GAGZ1B,OAAO,KAKTN,WAAa8B,EAAKG,aAAaC,KAAlBC,OAAAC,EAAA,EAAAD,CAAAL,kFAaX,IARA,IAAMO,EAASvB,EAAOwB,QAGhBC,EAAa,GAKZF,EAAOG,OAAS,GACrBD,EAAWE,KACTJ,EAAOK,OAAOC,KAAKC,MAAMD,KAAKE,SAAWR,EAAOG,QAAS,GAAG,IAIhE,OAAOD,uCAGIO,GAAa,IAAAC,EAAAC,KAElBC,EAAYD,KAAKpB,MAAMI,WAAWM,QAGlCY,EAAWF,KAAKjB,eAGlBpC,EAAQqD,KAAKpB,MAAMjC,MACnBC,EAAYoD,KAAKpB,MAAMhC,UAmB3B,GAhBKoD,KAAKpB,MAAMI,WAAWmB,SAASL,KAE9BnD,IAAUC,GACZD,IACAC,KAIAD,IAIFsD,EAAUR,KAAKK,IAIbE,KAAKpB,MAAMI,WAAWmB,SAASL,GAAc,CAE/C,OAAOE,KAAKI,SAAS,CACnBzD,MAFU,EAGVC,UAAWA,EACXH,YAAa,YACbC,WAAY,mBACZmC,cAAeqB,EACflB,WAAY,GACZ1B,OAAO,IAgBX,OAXA0C,KAAKI,SAAS,CACZzD,MAAOA,EACPC,UAAWA,EACXH,YAAa,UACbC,WAAY,yBACZmC,cAAeqB,EACflB,WAAYiB,EACZ3C,OAAO,IAIF+C,WAAW,kBAAMN,EAAKK,SAAS,CAAE3D,YAAa,MAAO,sCAO5D,IAAMmC,EAAQoB,KAAKpB,MACnB,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+D,EAAD,CACE3D,MAAOiC,EAAMjC,MACbC,UAAWgC,EAAMhC,UACjBF,WAAYkC,EAAMlC,WAClBD,YAAamC,EAAMnC,cAErBJ,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAD,CACElD,MAAOsB,EAAMtB,MACbC,WAAYqB,EAAMC,cAClB7B,WAAYgD,KAAKhD,aAEnBX,EAAAC,EAAAC,cAACkE,EAAD,cAxHaC,mBCFrBC,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAAYC,SAASC,eAAe","file":"static/js/main.ed67adfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Chandler.9a6671f4.png\";","module.exports = __webpack_public_path__ + \"static/media/Gunther.da8a201d.png\";","module.exports = __webpack_public_path__ + \"static/media/Jack Geller.33fa83ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Janice.4a0f7b92.png\";","module.exports = __webpack_public_path__ + \"static/media/Joey.c5e4e7a7.png\";","module.exports = __webpack_public_path__ + \"static/media/Judy Geller.4e606f05.png\";","module.exports = __webpack_public_path__ + \"static/media/Monica.66a1138a.png\";","module.exports = __webpack_public_path__ + \"static/media/Paul.c69b5578.png\";","module.exports = __webpack_public_path__ + \"static/media/Phoebe.0efce8e9.png\";","module.exports = __webpack_public_path__ + \"static/media/Rachel.7d9f9879.png\";","module.exports = __webpack_public_path__ + \"static/media/Ross.bede4385.png\";","module.exports = __webpack_public_path__ + \"static/media/Gary.08409079.png\";","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n  <div className=\"nav \">\n    <div>Clicky Game</div>\n    <div className={props.navMsgColor}>{props.navMessage}</div>\n    <div>\n      Score: {props.score} <span className=\"pipe\">|</span> High Score:{\" \"}\n      {props.highScore}\n    </div>\n  </div>\n);\n\nexport default Nav;\n","import React from \"react\";\nimport \"./Character.css\";\n\n// the onClick function is defined as a callback so that the clicked elements value\n// can be passed to props.clickEvent to check if the image has been clicked or not\nconst Character = props => (\n  <div className=\"card\" onClick={e => props.clickEvent(e.target.src)}>\n    <img className=\"card-img-top card-height\" src={props.name} alt=\"\" />\n  </div>\n);\n\nexport default Character;\n","import React from \"react\";\nimport \"./Container.css\";\nimport Character from \"../Character/Character.js\";\n\n//  main container for each Character component\n// loops through each index in props.characters, which contains an array of character images\n// to create a new Character component for each image\n// attaches the passed down clickEvent function to each Character component\nconst Container = props => (\n  // loops through\n  <div\n    className={\n      props.shake\n        ? \"container d-flex flex-wrap justify-content-center shake\"\n        : \"container d-flex flex-wrap justify-content-center\"\n    }\n  >\n    {props.characters.map((a, i) => (\n      <Character name={a} key={i} clickEvent={props.clickEvent} />\n    ))}\n  </div>\n);\n\nexport default Container;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => <div className=\"footer text-center\">React Cliky Game</div>;\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Banner.css\";\n\nconst Banner = () => (\n  <div className=\"banner text-center d-flex align-items-center justify-content-center\">\n    <p className=\"m-0\">\n      Click on an image to earn points, but do not click on any more than once!\n    </p>\n  </div>\n);\n\nexport default Banner;\n","import Chandler from \"./images/Chandler.png\";\nimport Gunther from \"./images/Gunther.png\";\nimport Jack from \"./images/Jack Geller.png\";\nimport Janice from \"./images/Janice.png\";\nimport Joey from \"./images/Joey.png\";\nimport Judy from \"./images/Judy Geller.png\";\nimport Monica from \"./images/Monica.png\";\nimport Paul from \"./images/Paul.png\";\nimport Phoebe from \"./images/Phoebe.png\";\nimport Rachel from \"./images/Rachel.png\";\nimport Ross from \"./images/Ross.png\";\nimport Gary from \"./images/Gary.png\";\n\nconst images = [\n  Chandler,\n  Gunther,\n  Jack,\n  Janice,\n  Joey,\n  Judy,\n  Monica,\n  Paul,\n  Rachel,\n  Phoebe,\n  Ross,\n  Gary\n];\n\nexport default images;\n","import React, { Component } from \"react\";\nimport Nav from \"./Nav/Nav.js\";\nimport Container from \"./Container/Container.js\";\nimport Footer from \"./Footer/Footer.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport images from \"../images\";\n\nclass MyGame extends Component {\n  state = {\n    score: 0,\n    highScore: 0,\n\n    // it will stores the class value to assign to navMessage based on a good or bad click\n    navMsgColor: \"\",\n\n    // contains intro, success, and failure message\n    navMessage: \"Click an image to begin!\",\n\n    // contains an array of image urls\n    allCharacters: this.shuffleArray(),\n\n    // will track  each clicked element.\n    wasClicked: [],\n\n    // shakes the container on an incorrect guess if set to true\n    shake: false\n  };\n\n  // binds the current this context to checkClicked to have access to the current state\n  // when passed down to the Character component\n  clickEvent = this.checkClicked.bind(this);\n\n  // used to shuffle the array of images when the DOM loads, and when an image is clicked\n  shuffleArray() {\n    // creates a copy of the current characters array to modify it by value, and not by reference\n    const newArr = images.slice();\n\n    // will store the shuffled array\n    const shuffleArr = [];\n\n    // each loop through an index gets spliced from newArr, reducing its length\n    // gets a random index based off the current length of newArr\n    // splices the value from newArr, and pushes it to shuffleArr\n    while (newArr.length > 0) {\n      shuffleArr.push(\n        newArr.splice(Math.floor(Math.random() * newArr.length), 1)[0]\n      );\n    }\n\n    return shuffleArr;\n  }\n\n  checkClicked(clickedElem) {\n    // it creates a copy of the wasClicked array to modify it by value, and not by reference. wasClicked stores all previous clicked images\n    const prevState = this.state.wasClicked.slice();\n\n    // shuffles the images\n    const shuffled = this.shuffleArray();\n\n    // tracks score\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n\n    // if the clicked item is not in wasClicked, then it hasn't been clicked and the score is increased\n    if (!this.state.wasClicked.includes(clickedElem)) {\n      // if score and highScore are the same, then there is a new highScore value\n      if (score === highScore) {\n        score++;\n        highScore++;\n\n        // if they are not equal, then only increase the score value\n      } else {\n        score++;\n      }\n\n      // will add the clicked item to wasClicked to track that it has been clicked\n      prevState.push(clickedElem);\n    }\n\n    // it will resets the current score if the same element was clicked twice\n    if (this.state.wasClicked.includes(clickedElem)) {\n      let score = 0;\n      return this.setState({\n        score: score,\n        highScore: highScore,\n        navMsgColor: \"incorrect\",\n        navMessage: \"Incorrect guess!\",\n        allCharacters: shuffled,\n        wasClicked: [],\n        shake: true\n      });\n    }\n\n    // if this runs, then the same element has not been clicked twice and the score is increased\n    this.setState({\n      score: score,\n      highScore: highScore,\n      navMsgColor: \"correct\",\n      navMessage: \"You Guessed Correctly!\",\n      allCharacters: shuffled,\n      wasClicked: prevState,\n      shake: false\n    });\n\n    // it will remove the green correct indicator on a successful click after .5s to re-render the class on each success\n    return setTimeout(() => this.setState({ navMsgColor: \"\" }), 500);\n  }\n\n  // renders score to the navbar.\n  // passes the randomized state.allCharacters array to Container to create a Character component for each image.\n  // passes the this.checkClicked down to container to pass to each Character component to be used for the click event.\n  render() {\n    const state = this.state;\n    return (\n      <div>\n        <Nav\n          score={state.score}\n          highScore={state.highScore}\n          navMessage={state.navMessage}\n          navMsgColor={state.navMsgColor}\n        />\n        <Banner />\n        <Container\n          shake={state.shake}\n          characters={state.allCharacters}\n          clickEvent={this.clickEvent}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default MyGame;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MyGame from \"./components/MyGame\";\nimport \"./index.css\";\n\nReactDOM.render(<MyGame />, document.getElementById(\"root\"));\n"],"sourceRoot":""}